/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package uil.Main.WorkSpaceProfiles;

import java.util.Optional;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Business.Business;
import model.SuperMarketManagement.SuperMarketProfile;
import model.OrderManagement.Order;
import model.OrderManagement.OrderItem;
import model.RegularUser.RegularUserProfile;
import model.Supplier.Supplier;
import model.OrderManagement.OrderStatusObserver;

/**
 *
 * @author divyansjemni
 */
public class UserOrderDetailsJPanel extends javax.swing.JPanel implements OrderStatusObserver {
    
     JPanel CardSequencePanel;
     Business business;
     SuperMarketProfile cpl;
     RegularUserProfile ru;
    /**
     * Creates new form SuperMarketOrderDetailsPanel
     */
    public UserOrderDetailsJPanel(Business b,RegularUserProfile cp, JPanel jp) {
        
         this.CardSequencePanel = jp;
         business = b;
         ru = cp;     
         business.getMasterOrderList().registerObserver(this);
        initComponents();
      displayOrders();
    }
    
private void displayOrders() {
    
        
    DefaultTableModel model = (DefaultTableModel) ordersTable.getModel();
    model.setRowCount(0);

    // Iterate over each order associated with the user
    for (Order order : ru.getOrders()) {
        StringBuilder productNames = new StringBuilder();
        for (OrderItem item : order.getOrderItems()) {
            if (productNames.length() > 0) {
                productNames.append(", ");  // Add a comma separator between product names
            }
            productNames.append(item.getSelectedProduct().getName());  // Append each product name
        }

        // Now add a single row for each order with all product names in one cell
        model.addRow(new Object[]{
            order.getOrderId(),
            order.getSupermarketName(),
            productNames.toString(),
            order.getTotalItems(),
            order.getTotalCost(),
            order.getStatus()
        });
    }

    ordersTable.revalidate();
    ordersTable.repaint();
}

@Override
    public void updateOrderStatus(Order order) {
        // Implement what should happen in this panel when an order's status is updated.
        // Typically, you might want to refresh the list of orders displayed or show a notification.
        refreshOrderList();
    }
    
    private void refreshOrderList() {
        // Method to refresh the list of orders shown on the panel.
        // This might involve fetching the list again from the MasterOrderList or redrawing the table.
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Back = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ordersTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        Back.setBackground(new java.awt.Color(0, 204, 255));
        Back.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        Back.setForeground(new java.awt.Color(255, 255, 255));
        Back.setText("BACK");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Order History");

        ordersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Order ID", "SuperMarket Name", "Product Names", "Total Items", "Total Cost", "Order Status"
            }
        ));
        jScrollPane1.setViewportView(ordersTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Back))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 737, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 737, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(Back)
                .addGap(86, 86, 86))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_BackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable ordersTable;
    // End of variables declaration//GEN-END:variables
}
