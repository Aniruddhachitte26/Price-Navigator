/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package uil.Main.WorkSpaceProfiles;

import java.util.Optional;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Business.Business;
import model.SuperMarketManagement.SuperMarketProfile;
import model.OrderManagement.Order;
import model.OrderManagement.OrderItem;
import model.Supplier.Supplier;

/**
 *
 * @author divyansjemni
 */
public class SuperMarketOrderDetailsPanel extends javax.swing.JPanel {
    
     JPanel CardSequencePanel;
     Business business;
     SuperMarketProfile cpl;

    /**
     * Creates new form SuperMarketOrderDetailsPanel
     */
    public SuperMarketOrderDetailsPanel(Business b,SuperMarketProfile cp, JPanel jp) {
        
         this.CardSequencePanel = jp;
         business = b;
         cpl = cp;     
        initComponents();
        populateCustomerOrders(cpl);
    }
    
private void populateCustomerOrders(SuperMarketProfile customerProfile) {
    DefaultTableModel model = (DefaultTableModel) OrderItemsTable.getModel();
    model.setRowCount(0); // Clear existing rows
    
    // Iterate through the orders of the specific customer
    for (Order order : customerProfile.getOrders()) {
        for (OrderItem orderItem : order.getOrderItems()) {
            // Add row to table
            Object[] row = new Object[8];
            row[0] = orderItem.getSelectedProduct().getName();
            row[1] = orderItem.getActualPrice();
            row[2] = orderItem.getQuantity();
            row[3] = orderItem.getOrderItemTotal();

            Optional<Supplier> supplierOpt = business.getSupplierDirectory().findSupplierByProduct(orderItem.getSelectedProduct());
            row[4] = supplierOpt.isPresent() ? supplierOpt.get().getName() : "Unknown";
            
            model.addRow(row);
        }
    }
}
private void populateCustomerOrders1(SuperMarketProfile customerProfile, String searchKeyword) {
    DefaultTableModel model = (DefaultTableModel) OrderItemsTable.getModel();
    model.setRowCount(0); // Clear existing rows
    
    // Iterate through the orders of the specific customer
    for (Order order : customerProfile.getOrders()) {
        for (OrderItem orderItem : order.getOrderItems()) {
            // Add row to table
            Object[] row = new Object[8];
            row[0] = orderItem.getSelectedProduct().getName();
            row[1] = orderItem.getActualPrice();
            row[2] = orderItem.getQuantity();
            row[3] = orderItem.getOrderItemTotal();

            Optional<Supplier> supplierOpt = business.getSupplierDirectory().findSupplierByProduct(orderItem.getSelectedProduct());
            row[4] = supplierOpt.isPresent() ? supplierOpt.get().getName() : "Unknown";
            
            model.addRow(row);
        }
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        OrderItemsTable = new javax.swing.JTable();
        Back = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtsearch = new javax.swing.JTextField();
        btnsearch = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        OrderItemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Actual price", "Quanity", "Item total", "SupplierName"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        OrderItemsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                OrderItemsTableMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                OrderItemsTableMousePressed(evt);
            }
        });
        jScrollPane4.setViewportView(OrderItemsTable);

        Back.setBackground(new java.awt.Color(0, 204, 255));
        Back.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        Back.setForeground(new java.awt.Color(255, 255, 255));
        Back.setText("BACK");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 255));
        jLabel1.setText("Order History");

        btnsearch.setBackground(new java.awt.Color(0, 204, 255));
        btnsearch.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnsearch.setForeground(new java.awt.Color(255, 255, 255));
        btnsearch.setText("SEARCH PRODUCT");
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(Back)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 888, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnsearch)
                        .addGap(215, 215, 215))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnsearch)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(Back)
                .addContainerGap(330, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void OrderItemsTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrderItemsTableMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_OrderItemsTableMouseEntered

    private void OrderItemsTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrderItemsTableMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_OrderItemsTableMousePressed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
    }//GEN-LAST:event_BackActionPerformed

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
        // TODO add your handling code here:
        String searchKeyword = txtsearch.getText().trim();

        // Check if the search keyword is not empty
        if (!searchKeyword.isEmpty()) {
            // Call populateCustomerOrders with the current customer profile and the search keyword
            populateCustomerOrders1(cpl, searchKeyword);
        } else {
            // If search keyword is empty, you might want to refresh the table to show all records
            populateCustomerOrders1(cpl, "");
        }

    }//GEN-LAST:event_btnsearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JTable OrderItemsTable;
    private javax.swing.JButton btnsearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables
}
