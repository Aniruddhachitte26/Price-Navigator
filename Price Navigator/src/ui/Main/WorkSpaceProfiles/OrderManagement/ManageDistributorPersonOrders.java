
package ui.Main.WorkSpaceProfiles.OrderManagement;

import javax.swing.JOptionPane;
import model.Business.Business;
import model.ProductManagement.Product;
import model.Supplier.Supplier;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.OrderManagement.Order;
import model.DistributorManagement.DistributorPersonProfile;
import model.OrderManagement.OrderStatusObserver;

/**
 *
 * @author Aniruddha
 */
public class ManageDistributorPersonOrders extends javax.swing.JPanel implements OrderStatusObserver {


    JPanel CardSequencePanel;
    Business business;
    Supplier selectedsupplier;
    Product selectedproduct;
    DistributorPersonProfile salesperson;

    public ManageDistributorPersonOrders(Business bz, JPanel jp, DistributorPersonProfile salesperson) {
    
    this.CardSequencePanel = jp;
    this.business = bz;
    this.salesperson = salesperson; // Initialize salesperson here
    initComponents();
    populateSupplierCatalogTable(); // Now you can call this method safely
    
    }

    public void populateSupplierCatalogTable() {
    DefaultTableModel model = (DefaultTableModel) SupplierCatalogTable.getModel();
    model.setRowCount(0); // Clear existing rows
    
    for (Order order : salesperson.getSalesOrders()) { // Assuming getSalesOrders() exists in DistributorPersonProfile
        Object[] row = new Object[4];
        row[0] = order.getOrderId();
        row[1] = order.getStatus();
        row[2] = order.getOrderTotal();
        row[3] = order.getCustomer().toString(); // Assuming toString() in SuperMarketProfile returns the desired customer detail
        model.addRow(row);
    }
    }
    
    @Override
    public void updateOrderStatus(Order order) {
        // Refresh the table when an order status updates
        populateSupplierCatalogTable();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Back = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        SupplierCatalogTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnViewOrders = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Back.setBackground(new java.awt.Color(0, 204, 255));
        Back.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        Back.setForeground(new java.awt.Color(255, 255, 255));
        Back.setText("BACK");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        add(Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 90, -1));

        SupplierCatalogTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order id", "Status", "Sales Volume", "Customer"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SupplierCatalogTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SupplierCatalogTableMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SupplierCatalogTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(SupplierCatalogTable);

        jScrollPane2.setViewportView(jScrollPane1);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 123, 580, 100));

        jLabel2.setBackground(new java.awt.Color(153, 255, 153));
        jLabel2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Browse Orders");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 550, -1));

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 204, 255));
        jLabel8.setText("ORDERS");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, 20));

        btnViewOrders.setBackground(new java.awt.Color(0, 204, 255));
        btnViewOrders.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnViewOrders.setForeground(new java.awt.Color(255, 255, 255));
        btnViewOrders.setText("View Order Details");
        btnViewOrders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewOrdersActionPerformed(evt);
            }
        });
        add(btnViewOrders, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 250, 170, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);

    }//GEN-LAST:event_BackActionPerformed

    private void SupplierCatalogTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SupplierCatalogTableMousePressed
        // TODO add your handling code 
    }//GEN-LAST:event_SupplierCatalogTableMousePressed

    private void SupplierCatalogTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SupplierCatalogTableMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_SupplierCatalogTableMouseEntered

    private void btnViewOrdersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewOrdersActionPerformed
        // TODO add your handling code here:
    int selectedRowIndex = SupplierCatalogTable.getSelectedRow();
if (selectedRowIndex < 0) {
    JOptionPane.showMessageDialog(this, "Please select an order to view details.", "Warning", JOptionPane.WARNING_MESSAGE);
    return;
}

// Check to ensure the selected row is within the table's row count
if (selectedRowIndex >= SupplierCatalogTable.getRowCount()) {
    JOptionPane.showMessageDialog(this, "Invalid selection.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

// Assuming the first column of the orders table contains the Order ID and it is of Integer type
Object orderIdObject = SupplierCatalogTable.getValueAt(selectedRowIndex, 0);
if (!(orderIdObject instanceof Integer)) {
    JOptionPane.showMessageDialog(this, "Invalid order ID.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}
int orderId = (Integer) orderIdObject;

// Find the Order object by ID
Order selectedOrder = findOrderById(orderId);

if (selectedOrder == null) {
    JOptionPane.showMessageDialog(this, "Selected order not found.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

// Proceed to display the order details
ViewOrderDetailsJPanel vodj = new ViewOrderDetailsJPanel(business, selectedOrder, CardSequencePanel);
CardSequencePanel.add("ViewOrderDetailsJPanel", vodj);
((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);
        
    }//GEN-LAST:event_btnViewOrdersActionPerformed

// Helper method to find an order by its ID
private Order findOrderById(int orderId) {
    for (Order order : salesperson.getSalesOrders()) {
        if (order.getOrderId() == orderId) {
            return order;
        }
    }
    return null; // Order not found
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JTable SupplierCatalogTable;
    private javax.swing.JButton btnViewOrders;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

}
